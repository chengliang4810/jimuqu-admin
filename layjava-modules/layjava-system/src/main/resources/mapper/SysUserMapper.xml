<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.layjava.system.mapper.SysUserMapper">

    <!-- 多结构嵌套自动映射需带上每个实体的主键id 否则映射会失败 -->
    <resultMap type="com.layjava.system.domain.vo.SysUserVo" id="SysUserResult">
        <id property="id" column="id"/>
        <result property="deptId" column="dept_id"/>
        <association property="dept" column="dept_id" resultMap="deptResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="deptResult" type="com.layjava.system.domain.vo.SysDeptVo">
        <id property="deptId" column="dept_id"/>
        <result property="email" column="dept_email"/>
        <result property="status" column="dept_status"/>
        <result property="createTime" column="dept_create_time"/>
    </resultMap>

    <resultMap id="RoleResult" type="com.layjava.system.domain.vo.SysRoleVo">
        <id property="roleId" column="role_id"/>
        <result property="status" column="role_status"/>
        <result property="createTime" column="role_create_time"/>
    </resultMap>

    <sql id="selectUserVo">
        select u.id,
               u.dept_id,
               u.account,
               u.name,
               u.user_type,
               u.email,
               u.avatar,
               u.phone,
               u.password,
               u.gender,
               u.status,
               u.login_ip,
               u.login_date,
               u.create_by,
               u.create_time,
               u.remark,
               d.dept_id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.status as dept_status,
               d.email as dept_email,
               d.create_time as dept_cteate_time,
               r.role_id,
               r.role_name,
               r.role_key,
               r.role_sort,
               r.data_scope,
               r.status as role_status
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role sur on u.id = sur.user_id
                 left join sys_role r on r.role_id = sur.role_id
    </sql>

    <select id="selectPageUserList" resultMap="SysUserResult">
        select u.id, u.dept_id, u.name, u.account,  u.email, u.avatar, u.phone, u.gender,
               u.status, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
               d.dept_name, d.leader, u1.account as leaderName
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user u1 on u1.user_id = d.leader
            ${ew.getCustomSqlSegment}
    </select>

    <select id="selectUserList" resultMap="SysUserResult">
        select u.id, u.dept_id, u.name, u.account, u.email, u.avatar, u.phone, u.gender,
               u.status, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
               d.dept_name, d.leader, u1.account as leaderName
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user u1 on u1.user_id = d.leader
            ${ew.getCustomSqlSegment}
    </select>

    <select id="selectAllocatedList" resultMap="SysUserResult">
        select distinct u.id, u.dept_id, u.account, u.name, u.email, u.phone, u.status, u.create_time
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role sur on u.id = sur.user_id
                 left join sys_role r on r.role_id = sur.role_id
            ${ew.getCustomSqlSegment}
    </select>

    <select id="selectUnallocatedList" resultMap="SysUserResult">
        select distinct u.id, u.dept_id, u.account, u.name, u.email, u.phone, u.status, u.create_time
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role sur on u.id = sur.user_id
                 left join sys_role r on r.role_id = sur.role_id
            ${ew.getCustomSqlSegment}
    </select>

    <select id="selectUserByAccount" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.account = #{account}
    </select>

    <select id="selectUserByPhone" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.phone = #{phone}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.email = #{email}
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.id = #{userId}
    </select>

</mapper>
